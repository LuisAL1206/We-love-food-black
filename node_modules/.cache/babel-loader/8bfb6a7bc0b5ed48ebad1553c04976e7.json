{"ast":null,"code":"import _regeneratorRuntime from\"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    query getOnePost($id:ID!){\\n        getSinglePost(id:$id){\\n            title\\n            content\\n            cover\\n        }\\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    mutation updatePost($id: ID!, $data: PostUpdateInput!) {\\n        updateOnePost(id:$id ,data: $data) {\\n            _id\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import{useMutation,useQuery}from'react-apollo-hooks';import gql from'graphql-tag';import Layout from'../common/Layout';import Input from'../common/Input';import useForm from'../hooks/useForm';import authHOC from'../utils/authHOC';var UPDATE_POST=gql(_templateObject());var GET_POST=gql(_templateObject2());function Update(_ref){var match=_ref.match,history=_ref.history;var _useMutation=useMutation(UPDATE_POST),_useMutation2=_slicedToArray(_useMutation,1),sendPost=_useMutation2[0];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),cover=_useState2[0],setCover=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),coverPreview=_useState4[0],setCoverPreview=_useState4[1];var query=useQuery(GET_POST,{variables:{id:match.params.id}});var catchCover=function catchCover(event){var reader=new FileReader();var file=event.target.files[0];reader.onloadend=function(){setCover(file);setCoverPreview(reader.result);};reader.readAsDataURL(file);};var catchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs){var newData,_ref3,data,errors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:delete inputs.cover;newData=cover?_objectSpread({},inputs,{cover:cover}):_objectSpread({},inputs);_context.next=4;return sendPost({variables:{id:match.params.id,data:newData}});case 4:_ref3=_context.sent;data=_ref3.data;errors=_ref3.errors;if(data)history.push('/');if(errors)alert(\"Errores: \".concat(errors));case 9:case\"end\":return _context.stop();}}},_callee);}));return function catchData(_x){return _ref2.apply(this,arguments);};}();var _useForm=useForm(catchData,query.data),inputs=_useForm.inputs,handleSubmit=_useForm.handleSubmit,handleInputChange=_useForm.handleInputChange;if(query.loading)return React.createElement(\"h2\",null,\"Carrgando...\");return React.createElement(React.Fragment,null,React.createElement(Layout,{head:\"Modifica tu post de postealo!\",subhead:\"Comparte todo lo que gustes aqui\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-8 col-md-10 mx-auto\"},React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(Input,{name:\"title\",label:\"Titulo: \",type:\"text\",placeholder:\"Titulo del post\",value:inputs.title,change:handleInputChange}),React.createElement(\"div\",{className:\"control-group\"},React.createElement(\"div\",{className:\"form-group floating-label-form-group controls\"},React.createElement(\"label\",null,\"Contenido: \"),React.createElement(\"textarea\",{className:\"form-control\",placeholder:\"Contenido del post \",name:\"content\",onChange:handleInputChange,value:inputs.content,cols:\"30\",rows:\"10\"}))),React.createElement(Input,{name:\"cover\",label:\"Cover: \",type:\"file\",placeholder:\"Selecciona el cover de tu post.\",change:catchCover}),query.data.getSinglePost.cover?React.createElement(React.Fragment,null,React.createElement(\"h4\",null,\"Imagen previa\"),React.createElement(\"img\",{src:query.data.getSinglePost.cover,alt:\"\",className:\"d-block w-50\"})):React.createElement(React.Fragment,null),React.createElement(\"img\",{src:coverPreview,alt:\"\",className:\"d-block w-50\"}),React.createElement(\"div\",{className:\"clearfix mt-4\"},React.createElement(\"button\",{className:\"btn btn-primary float-right\",type:\"submit\"},\"Actualizar post.\"))))))));}export default authHOC(Update);","map":{"version":3,"sources":["/Users/AL1206/Desktop/35_frontend/b35-frontend/src/views/Update.js"],"names":["React","useState","useMutation","useQuery","gql","Layout","Input","useForm","authHOC","UPDATE_POST","GET_POST","Update","match","history","sendPost","cover","setCover","coverPreview","setCoverPreview","query","variables","id","params","catchCover","event","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","catchData","inputs","newData","data","errors","push","alert","handleSubmit","handleInputChange","loading","title","content","getSinglePost"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useMutation, useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input' \nimport useForm from '../hooks/useForm';\nimport authHOC from '../utils/authHOC';\n\nconst UPDATE_POST = gql `\n    mutation updatePost($id: ID!, $data: PostUpdateInput!) {\n        updateOnePost(id:$id ,data: $data) {\n            _id\n        }\n    }\n`;\n\nconst GET_POST = gql `\n    query getOnePost($id:ID!){\n        getSinglePost(id:$id){\n            title\n            content\n            cover\n        }\n    }\n`;\n\n\nfunction Update({match, history}){\n    const [sendPost] = useMutation(UPDATE_POST);\n    const [cover, setCover] = useState('');\n    const [coverPreview, setCoverPreview] = useState('');\n    \n    const query = useQuery(GET_POST, {\n        variables: {\n            id: match.params.id\n        }\n    });\n\n    const catchCover = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    reader.onloadend = () =>{\n        setCover(file);\n        setCoverPreview(reader.result);\n    } \n\n    reader.readAsDataURL(file);\n\n    }\n\n    const catchData = async (inputs) => {\n        delete inputs.cover;\n        const newData = cover ? { ...inputs, cover}: {...inputs}\n        const {\n            data,\n            errors\n        } = await sendPost({\n                    variables: {\n                        id: match.params.id,\n                        data: newData,\n                    }\n                });\n        if(data) history.push('/');\n        if (errors) alert(`Errores: ${errors}`);\n    }\n\n    const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData, query.data);\n\n    if(query.loading) return <h2>Carrgando...</h2>\n\n        return(<>\n         <Layout head = \"Modifica tu post de postealo!\"\n        subhead = \"Comparte todo lo que gustes aqui\" >\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <form onSubmit={handleSubmit}>\n                    <Input\n                    name=\"title\"\n                    label=\"Titulo: \"\n                    type=\"text\"\n                    placeholder=\"Titulo del post\"\n                    value={inputs.title}\n                    change={handleInputChange}\n                    ></Input>\n                    <div className=\"control-group\">\n                            <div className=\"form-group floating-label-form-group controls\">\n                                <label>Contenido: </label>\n                                <textarea className=\"form-control\" \n                                placeholder=\"Contenido del post \"\n                                name=\"content\" onChange={handleInputChange} value={inputs.content} \n                                cols=\"30\" rows=\"10\"></textarea>\n                            </div>\n                        </div>\n                    <Input\n                    name=\"cover\"\n                    label=\"Cover: \"\n                    type=\"file\"\n                    placeholder=\"Selecciona el cover de tu post.\"\n                    change={catchCover}\n\n                    ></Input>\n\n                    {\n                        query.data.getSinglePost.cover ? (\n                            <>\n                            <h4>Imagen previa</h4>\n                            <img src={query.data.getSinglePost.cover} alt=\"\" className=\"d-block w-50\"></img>\n                            </>\n                        ): (<></>)\n                    }\n\n                    <img src={coverPreview} alt=\"\" className=\"d-block w-50\"></img>\n        \n                <div className=\"clearfix mt-4\">\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">\n                        Actualizar post. \n                        </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        </Layout>\n    </>);\n}\n\nexport default authHOC(Update);"]},"metadata":{},"sourceType":"module"}