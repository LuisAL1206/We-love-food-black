{"ast":null,"code":"import _defineProperty from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/AL1206/Desktop/35_frontend/b35-frontend/src/views/Update.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query getOnePost($id:ID!){\\n        getSinglePost(id:$id){\\n            title\\n            content\\n            cover\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation updatePost($id: ID!, $data: PostUpdateInput!) {\\n        updateOnePost(id:$id ,data: $data) {\\n            _id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation, useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input';\nimport useForm from '../hooks/useForm';\nimport authHOC from '../utils/authHOC';\nconst UPDATE_POST = gql(_templateObject());\nconst GET_POST = gql(_templateObject2());\n\nfunction Update({\n  match,\n  history\n}) {\n  const _useMutation = useMutation(UPDATE_POST),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        sendPost = _useMutation2[0];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        cover = _useState2[0],\n        setCover = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        coverPreview = _useState4[0],\n        setCoverPreview = _useState4[1];\n\n  const query = useQuery(GET_POST, {\n    variables: {\n      id: match.params.id\n    }\n  });\n\n  const catchCover = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    reader.onloadend = () => {\n      setCover(file);\n      setCoverPreview(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const catchData = async inputs => {\n    delete inputs.cover;\n    const newData = cover ? _objectSpread({}, inputs, {\n      cover\n    }) : _objectSpread({}, inputs);\n\n    const _ref = await sendPost({\n      variables: {\n        id: match.params.id,\n        data: newData\n      }\n    }),\n          data = _ref.data,\n          errors = _ref.errors;\n\n    if (data) history.push('/');\n    if (errors) alert(\"Errores: \".concat(errors));\n  };\n\n  const _useForm = useForm(catchData, query.data),\n        inputs = _useForm.inputs,\n        handleSubmit = _useForm.handleSubmit,\n        handleInputChange = _useForm.handleInputChange;\n\n  if (query.loading) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Carrgando...\");\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://cdn4.vectorstock.com/i/1000x1000/25/23/route-dashboard-city-street-map-navigation-town-vector-23292523.jpg\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n}\n\nexport default authHOC(Update);\n/*\nimport React, { Component } from 'react'\n\nexport class enRuta extends Component {\n    render() {\n        return (\n            <div>\n                <img src=\"https://cdn4.vectorstock.com/i/1000x1000/25/23/route-dashboard-city-street-map-navigation-town-vector-23292523.jpg\" alt=\"\"/>\n            </div>\n        )\n    }\n}\n\nexport default enRuta */","map":{"version":3,"sources":["/Users/AL1206/Desktop/35_frontend/b35-frontend/src/views/Update.js"],"names":["React","useState","useMutation","useQuery","gql","Layout","Input","useForm","authHOC","UPDATE_POST","GET_POST","Update","match","history","sendPost","cover","setCover","coverPreview","setCoverPreview","query","variables","id","params","catchCover","event","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","catchData","inputs","newData","data","errors","push","alert","handleSubmit","handleInputChange","loading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,oBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,WAAW,GAAGL,GAAH,mBAAjB;AAQA,MAAMM,QAAQ,GAAGN,GAAH,oBAAd;;AAWA,SAASO,MAAT,CAAgB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAhB,EAAiC;AAAA,uBACVX,WAAW,CAACO,WAAD,CADD;AAAA;AAAA,QACtBK,QADsB;;AAAA,oBAEHb,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAEtBc,KAFsB;AAAA,QAEfC,QAFe;;AAAA,qBAGWf,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGtBgB,YAHsB;AAAA,QAGRC,eAHQ;;AAK7B,QAAMC,KAAK,GAAGhB,QAAQ,CAACO,QAAD,EAAW;AAC7BU,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAET,KAAK,CAACU,MAAN,CAAaD;AADV;AADkB,GAAX,CAAtB;;AAMA,QAAME,UAAU,GAAGC,KAAK,IAAI;AAC5B,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AAEAJ,IAAAA,MAAM,CAACK,SAAP,GAAmB,MAAK;AACpBd,MAAAA,QAAQ,CAACW,IAAD,CAAR;AACAT,MAAAA,eAAe,CAACO,MAAM,CAACM,MAAR,CAAf;AACH,KAHD;;AAKAN,IAAAA,MAAM,CAACO,aAAP,CAAqBL,IAArB;AAEC,GAXD;;AAaA,QAAMM,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAChC,WAAOA,MAAM,CAACnB,KAAd;AACA,UAAMoB,OAAO,GAAGpB,KAAK,qBAAQmB,MAAR;AAAgBnB,MAAAA;AAAhB,2BAA4BmB,MAA5B,CAArB;;AAFgC,iBAM5B,MAAMpB,QAAQ,CAAC;AACPM,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAET,KAAK,CAACU,MAAN,CAAaD,EADV;AAEPe,QAAAA,IAAI,EAAED;AAFC;AADJ,KAAD,CANc;AAAA,UAI5BC,IAJ4B,QAI5BA,IAJ4B;AAAA,UAK5BC,MAL4B,QAK5BA,MAL4B;;AAYhC,QAAGD,IAAH,EAASvB,OAAO,CAACyB,IAAR,CAAa,GAAb;AACT,QAAID,MAAJ,EAAYE,KAAK,oBAAaF,MAAb,EAAL;AACf,GAdD;;AAxB6B,mBA4CzB9B,OAAO,CAAC0B,SAAD,EAAYd,KAAK,CAACiB,IAAlB,CA5CkB;AAAA,QAyCzBF,MAzCyB,YAyCzBA,MAzCyB;AAAA,QA0CzBM,YA1CyB,YA0CzBA,YA1CyB;AAAA,QA2CzBC,iBA3CyB,YA2CzBA,iBA3CyB;;AA8C7B,MAAGtB,KAAK,CAACuB,OAAT,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEd,SAAO,0CACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU;AAAK,IAAA,GAAG,EAAC,oHAAT;AAA8H,IAAA,GAAG,EAAC,EAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CADS,CAAP;AAKP;;AAED,eAAelC,OAAO,CAACG,MAAD,CAAtB;AAEA","sourcesContent":["import React, {useState} from 'react';\nimport { useMutation, useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input' \nimport useForm from '../hooks/useForm';\nimport authHOC from '../utils/authHOC';\n\nconst UPDATE_POST = gql `\n    mutation updatePost($id: ID!, $data: PostUpdateInput!) {\n        updateOnePost(id:$id ,data: $data) {\n            _id\n        }\n    }\n`;\n\nconst GET_POST = gql `\n    query getOnePost($id:ID!){\n        getSinglePost(id:$id){\n            title\n            content\n            cover\n        }\n    }\n`;\n\n\nfunction Update({match, history}){\n    const [sendPost] = useMutation(UPDATE_POST);\n    const [cover, setCover] = useState('');\n    const [coverPreview, setCoverPreview] = useState('');\n    \n    const query = useQuery(GET_POST, {\n        variables: {\n            id: match.params.id\n        }\n    });\n\n    const catchCover = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    reader.onloadend = () =>{\n        setCover(file);\n        setCoverPreview(reader.result);\n    } \n\n    reader.readAsDataURL(file);\n\n    }\n\n    const catchData = async (inputs) => {\n        delete inputs.cover;\n        const newData = cover ? { ...inputs, cover}: {...inputs}\n        const {\n            data,\n            errors\n        } = await sendPost({\n                    variables: {\n                        id: match.params.id,\n                        data: newData,\n                    }\n                });\n        if(data) history.push('/');\n        if (errors) alert(`Errores: ${errors}`);\n    }\n\n    const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData, query.data);\n\n    if(query.loading) return <h2>Carrgando...</h2>\n\n        return(<>\n      <div>\n                <img src=\"https://cdn4.vectorstock.com/i/1000x1000/25/23/route-dashboard-city-street-map-navigation-town-vector-23292523.jpg\" alt=\"\"/>\n            </div>\n    </>);\n}\n\nexport default authHOC(Update);\n\n/*\nimport React, { Component } from 'react'\n\nexport class enRuta extends Component {\n    render() {\n        return (\n            <div>\n                <img src=\"https://cdn4.vectorstock.com/i/1000x1000/25/23/route-dashboard-city-street-map-navigation-town-vector-23292523.jpg\" alt=\"\"/>\n            </div>\n        )\n    }\n}\n\nexport default enRuta */\n"]},"metadata":{},"sourceType":"module"}