{"ast":null,"code":"import _slicedToArray from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/AL1206/Desktop/35_frontend/b35-frontend/src/components/PostCard.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  mutation deletePost($id:ID!){\\n    deleteOnePost(id:$id)\\n  }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nconst DELETE_POST = gql(_templateObject());\n\nfunction PostCard({\n  title,\n  author,\n  id,\n  edit,\n  remove\n}) {\n  const _useMutation = useMutation(DELETE_POST),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        deletePost = _useMutation2[0];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"post-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/post/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"post-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title)), React.createElement(\"p\", {\n    className: \"post-meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Posted by\", React.createElement(Link, {\n    to: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, author)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, edit ? React.createElement(Link, {\n    to: \"/update/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Editar \") : React.createElement(React.Fragment, null), remove ? React.createElement(\"button\", {\n    onClick: () => {\n      deletePost({\n        variables: {\n          id\n        }\n      }).then(() => {\n        window.location.reload();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Borrar post \") : React.createElement(React.Fragment, null))));\n}\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/AL1206/Desktop/35_frontend/b35-frontend/src/components/PostCard.js"],"names":["React","Link","useMutation","gql","DELETE_POST","PostCard","title","author","id","edit","remove","deletePost","variables","then","window","location","reload"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA2B,oBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,WAAW,GAAGD,GAAH,mBAAjB;;AAQA,SAASE,QAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,EAAhB;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAlB,EAAqD;AAAA,uBAC9BR,WAAW,CAACE,WAAD,CADmB;AAAA;AAAA,QAC5CO,UAD4C;;AAIjD,SACI,0CACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,kBAAWH,EAAX,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF,CADF,EAME;AAAI,IAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,MAAd,CADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,IAAI,GAAG,oBAAC,IAAD;AAAM,IAAA,EAAE,oBAAaD,EAAb,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,GAA8C,yCAFtD,EAKIE,MAAM,GAAG;AAAQ,IAAA,OAAO,EACtB,MAAM;AAEFC,MAAAA,UAAU,CAAC;AAACC,QAAAA,SAAS,EAAC;AAACJ,UAAAA;AAAD;AAAX,OAAD,CAAV,CAA6BK,IAA7B,CAAkC,MAAI;AACpCC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAFD;AAIH,KAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,GASJ,yCAdN,CATF,CADA,CADJ;AA+BH;;AAED,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport {useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\n\nconst DELETE_POST = gql`\n\n  mutation deletePost($id:ID!){\n    deleteOnePost(id:$id)\n  }\n\n`;\n\nfunction PostCard({title, author, id, edit, remove}) {\n  const [deletePost] = useMutation(DELETE_POST);\n\n\n    return (\n        <>\n        <div className=\"post-preview\">\n          <Link to={`/post/${id}`}>\n            < h2 className= \"post-title\" >\n              {title}\n            </h2>\n          </Link>\n          < p className= \"post-meta\" > Posted by\n            <Link to=\"#\">{author}</Link> \n          </p>\n          <p>\n            {\n              edit ? <Link to={`/update/${id}`}>Editar </Link>: <></>\n            } \n            {\n              remove ? <button onClick={\n                () => {\n\n                    deletePost({variables:{id}}).then(()=>{\n                      window.location.reload();\n                    })\n                  \n                }\n              }>Borrar post </button>\n              : <></>\n            }           \n          </p>\n        </div>\n        </>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}