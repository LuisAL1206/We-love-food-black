{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/AL1206/Desktop/35_frontend/b35-frontend/src/views/Post.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query getOnePost($id:ID!){\\n        getSinglePost(id:$id){\\n            title\\n            content\\n            cover\\n            author{\\n                first_name\\n                last_name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nconst ONE_POST = gql(_templateObject());\n\nfunction Post({\n  match\n}) {\n  const id = match.params.id;\n\n  const _useQuery = useQuery(ONE_POST, {\n    variables: {\n      id\n    }\n  }),\n        loading = _useQuery.loading,\n        errors = _useQuery.errors,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Carrgando\");\n  if (errors) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, errors);\n  console.log(data);\n  return React.createElement(Layout, {\n    head: data.getSinglePost.title,\n    cover: data.getSinglePost.cover,\n    subhead: \"Escrito por: \".concat(data.getSinglePost.author.first_name, \" \").concat(data.getSinglePost.author.last_name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 col-lg-10 mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, data.getSinglePost.content)))));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/AL1206/Desktop/35_frontend/b35-frontend/src/views/Post.js"],"names":["React","useQuery","gql","Layout","ONE_POST","Post","match","id","params","variables","loading","errors","data","console","log","getSinglePost","title","cover","author","first_name","last_name","content"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,QAAQ,GAAGF,GAAH,mBAAd;;AAcA,SAASG,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAAA,QACXC,EADW,GACLD,KAAK,CAACE,MADD,CACXD,EADW;;AAAA,oBAMdN,QAAQ,CAACG,QAAD,EAAW;AACnBK,IAAAA,SAAS,EAAE;AACPF,MAAAA;AADO;AADQ,GAAX,CANM;AAAA,QAGdG,OAHc,aAGdA,OAHc;AAAA,QAIdC,MAJc,aAIdA,MAJc;AAAA,QAKdC,IALc,aAKdA,IALc;;AAWlB,MAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACZ,MAAGC,MAAH,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,IAAI,CAACG,aAAL,CAAmBC,KAAjC;AACA,IAAA,KAAK,EACDJ,IAAI,CAACG,aAAL,CAAmBE,KAFvB;AAIA,IAAA,OAAO,yBAAkBL,IAAI,CAACG,aAAL,CAAmBG,MAAnB,CAA0BC,UAA5C,cAA0DP,IAAI,CAACG,aAAL,CAAmBG,MAAnB,CAA0BE,SAApF,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,IAAI,CAACG,aAAL,CAAmBM,OAAvB,CADD,CADD,CADQ,CALJ,CADJ;AAgBH;;AAED,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\n\nconst ONE_POST = gql`\n    query getOnePost($id:ID!){\n        getSinglePost(id:$id){\n            title\n            content\n            cover\n            author{\n                first_name\n                last_name\n            }\n        }\n    }\n`;\n\nfunction Post({match}){\n    const {id} = match.params;\n    const {\n        loading,\n        errors,\n        data\n    } = useQuery(ONE_POST, {\n        variables: {\n            id\n        }\n    });\n    if(loading) return <h2>Carrgando</h2>\n    if(errors) return <h2>{errors}</h2>\n    console.log(data);\n\n    return(\n        <Layout head={data.getSinglePost.title}\n        cover = {\n            data.getSinglePost.cover\n        }\n        subhead={`Escrito por: ${data.getSinglePost.author.first_name} ${data.getSinglePost.author.last_name}`}>\n            <div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-8 col-lg-10 mx-auto\">\n\t\t\t\t\t\t<p>{data.getSinglePost.content}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n        </Layout>\n    );\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}