{"ast":null,"code":"import _defineProperty from \"/Users/AL1206/Desktop/35_frontend/b35-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient } from 'apollo-client'; // import { createHttpLink } from 'apollo-link-http';\n\nimport { createUploadLink } from 'apollo-upload-client';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nconst API_URL = process.env.REACT_API_URL ||\n/* 'https://back-35.herokuapp.com/' */\n'https://afternoon-scrubland-50224.herokuapp.com/';\nconst httpLink = createUploadLink({\n  uri: API_URL\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('blogToken');\n  const context = {\n    headers: _objectSpread({}, headers)\n  };\n  if (token) context.headers['authorization'] = \"JWT \".concat(token);\n  return context;\n});\nexport default new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});","map":{"version":3,"sources":["/Users/AL1206/Desktop/35_frontend/b35-frontend/src/graphql.js"],"names":["ApolloClient","createUploadLink","setContext","InMemoryCache","API_URL","process","env","REACT_API_URL","httpLink","uri","authLink","_","headers","token","localStorage","getItem","context","link","concat","cache"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,eAA7B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,QAA0B,qBAA1B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAA6B;AAAuC,kDAApF;AAEA,MAAMC,QAAQ,GAAGP,gBAAgB,CAAC;AAC9BQ,EAAAA,GAAG,EAAEL;AADyB,CAAD,CAAjC;AAIA,MAAMM,QAAQ,GAAGR,UAAU,CAAC,CAACS,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AACA,QAAMC,OAAO,GAAG;AACZJ,IAAAA,OAAO,oBACAA,OADA;AADK,GAAhB;AAKA,MAAIC,KAAJ,EAAWG,OAAO,CAACJ,OAAR,CAAgB,eAAhB,kBAA0CC,KAA1C;AACX,SAAOG,OAAP;AACH,CAT0B,CAA3B;AAWA,eAAe,IAAIhB,YAAJ,CAAiB;AAC5BiB,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADsB;AAE5BW,EAAAA,KAAK,EAAE,IAAIhB,aAAJ;AAFqB,CAAjB,CAAf","sourcesContent":["import { ApolloClient } from 'apollo-client';\n// import { createHttpLink } from 'apollo-link-http';\nimport { createUploadLink } from 'apollo-upload-client'\nimport { setContext} from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst API_URL = process.env.REACT_API_URL || /* 'https://back-35.herokuapp.com/' */ 'https://afternoon-scrubland-50224.herokuapp.com/';\n\nconst httpLink = createUploadLink({\n    uri: API_URL,\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('blogToken');\n    const context = {\n        headers: {\n            ...headers,\n        },\n    }\n    if (token) context.headers['authorization'] = `JWT ${token}`;\n    return context;\n});\n\nexport default new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n"]},"metadata":{},"sourceType":"module"}