{"version":3,"sources":["utils/authenticate.js","common/Navbar.js","common/Head.js","common/Layout.js","components/PostCard.js","common/Feed.js","views/Home.js","common/Input.js","hooks/useForm.js","views/Login.js","views/Signup.js","utils/authHOC.js","views/Create.js","views/Post.js","views/Update.js","views/Me.js","Routes.js","graphql.js","serviceWorker.js","index.js","img/comida-mexicana.png"],"names":["token","localStorage","getItem","base64","split","replace","isAuthenticated","payload","JSON","parse","window","atob","Navbar","props","state","title","prevProps","prevState","authenticate","className","id","this","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","first_name","Component","Head","useState","subheading","cover","image","style","backgroundImage","Layout","head","subhead","children","FoodCardOrder","platillos","searchValue","buscaPlatilos","e","setState","target","value","toLowerCase","renderPlatillos","map","platillo","startsWith","src","img_platillo","width","alt","picante","restaurante","ingredientes","descripcion","class","getPlatillos","axios","get","then","response","data","catch","err","console","log","put","res","placeholder","onChange","QUERY_POSTS","gql","Feed","useQuery","loading","errors","getPosts","post","PostCard","edit","author","_id","key","href","Home","Input","label","change","required","name","useForm","callback","current","inputs","setInputs","useEffect","getSinglePost","__typename","handleSubmit","event","preventDefault","handleInputChange","persist","fields","LOGIN_MUTATION","Login","history","useMutation","sendLogin","a","variables","login","setItem","push","alert","onSubmit","email","password","CREATE_MUTATION","Signup","sendSignup","confirm_password","last_name","birth_date","gender","addres","WrappedComponent","CREATE_POST","Create","sendPost","setCover","coverPreview","setCoverPreview","content","cols","rows","reader","FileReader","file","files","onloadend","result","readAsDataURL","ONE_POST","Post","match","params","UPDATE_POST","GET_POST","authHOC","query","newData","PROFILE","Me","me","posts","filter","is_active","remove","Logout","removeItem","Routes","exact","path","component","Update","API_URL","process","REACT_API_URL","httpLink","createUploadLink","uri","authLink","setContext","_","headers","context","ApolloClient","link","concat","cache","InMemoryCache","Boolean","location","hostname","ReactDOM","render","client","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"wOAAe,aACX,IAAMA,EAAQC,aAAaC,QAAQ,aAEnC,GAAGF,EAAM,CACL,IACMG,EADUH,EAAMI,MAAM,KAAK,GACVC,QAAQ,IAAI,KAAKA,QAAQ,IAAI,KAGpD,MAAO,CACHC,iBAAiB,EACjBC,QAJYC,KAAKC,MAAMC,OAAOC,KAAKR,KAOvC,MAAO,CACHG,iBAAiB,EACjBC,QAAQ,OC4DLK,E,YAtEX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,MAAOF,EAAME,OAHH,E,6HAgBCC,EAAWC,M,+BAKpB,IAAD,EACgCC,IAA7BZ,EADH,EACGA,gBAAiBC,EADpB,EACoBA,QACzB,OACI,oCACA,yBAAKY,UAAU,iDAAiDC,GAAG,WAC/D,yBAAKD,UAAU,aACdE,KAAKP,MAAMC,MACZ,4BAAQI,UAAU,sCAAsCG,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBAA/L,OAEI,uBAAGR,UAAU,iBAEjB,yBAAKA,UAAU,2BAA2BC,GAAG,oBACzC,wBAAID,UAAU,sBACd,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,KAA9B,YAENtB,EACE,oCACI,wBAAIa,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,OAA9B,QAA0CrB,EAAQsB,WAAlD,MAEA,wBAAIV,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,WAA9B,mBAEA,wBAAIT,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,WAA9B,sBAIJ,oCACA,wBAAIT,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,UAA9B,oBAEA,wBAAIT,UAAU,YACd,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,WAA9B,4B,GAxDHE,a,wBCqBNC,MAtBf,SAAclB,GAAQ,IAAD,EACSmB,mBAASnB,EAAME,OADxB,mBACVA,EADU,aAEmBiB,mBAASnB,EAAMoB,aAFlC,mBAEVA,EAFU,KAGXC,GAHW,KAGHrB,EAAMqB,MAAQrB,EAAMqB,MAAQC,KAC1C,OACI,oCACI,4BAAQhB,UAAU,WAAWiB,MAAO,CAACC,gBAAgB,QAAD,OAAUH,EAAV,QAChD,yBAAKf,UAAU,YACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,gBACX,4BAAKJ,GACL,0BAAMI,UAAU,cAAcc,UCDvCK,MAXf,YAAoD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,SAAUP,EAAQ,EAARA,MACvC,OACA,oCACE,kBAAC,EAAD,CAAQnB,MAAM,iBACd,kBAAC,EAAD,CAAMA,MAAOwB,EAAMN,WAAYO,EAASN,MAAOA,IAC5CO,I,wDC6IMC,EA5Ff,2MAEI5B,MAAQ,CACJ6B,UAAW,GACXC,YAAa,IAJrB,EA8BIC,cAAgB,SAACC,GACb,EAAKC,SAAS,CACVH,YAAaE,EAAEE,OAAOC,MAAMC,iBAhCxC,EA8CIC,gBAAkB,WACd,OAAO,EAAKrC,MAAM6B,UAAUS,KAAI,SAAAC,GAC5B,GAAIA,EAASA,SAASH,cAAcI,WAAW,EAAKxC,MAAM8B,aACtD,OACI,yBAAKzB,UAAU,QACX,yBAAKoC,IAAKF,EAASG,aAAcpB,MAAO,CAAEqB,MAAO,SAAWtC,UAAU,uBAAuBuC,IAAI,yBACjG,yBAAKvC,UAAU,aACX,wBAAIA,UAAU,cAAckC,EAASA,UACrC,uBAAGlC,UAAU,aAAakC,EAASM,SACnC,yBAAKxC,UAAU,WAAWoC,IAAKF,EAASO,YAAaF,IAAI,gBACzD,uBAAGvC,UAAU,aAAakC,EAASQ,cACnC,uBAAG1C,UAAU,aAAakC,EAASS,aACnC,6BACA,4BAAQxC,KAAK,SAASyC,MAAM,2BAA0B,kBAAC,OAAD,CAAM5C,UAAU,WAAWS,GAAG,YAA9B,mBA3DlF,mFAQQP,KAAK2C,iBARb,qCAYoB,IAAD,OACXC,IAAMC,IAAN,iDACKC,MAAK,SAAAC,GACF,EAAKrB,SAAS,CACVJ,UAAWyB,EAASC,UAG3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAnBtC,qCAsBmBnD,GAAK,IAAD,OACf6C,IAAMS,IAAN,0DAA6DtD,IACxD+C,MAAK,SAAAQ,GACF,EAAKX,kBAERM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QA3BtC,+BA8EQ,OACI,yBAAKpD,UAAU,kBACX,yBAAKA,UAAU,oBACX,2BAAOG,KAAK,OAAOH,UAAU,eAAeyD,YAAY,4BAAyBC,SAAUxD,KAAKwB,iBAGhGxB,KAAK8B,uBApFzB,GAAmCrB,a,oPCrDnC,IAAMgD,EAAcC,IAAH,KAgDFC,MAlCf,WAAiB,IAAD,EAEsBC,YAASH,GAAnCI,EAFI,EAEJA,QAASC,EAFL,EAEKA,OAAQd,EAFb,EAEaA,KAEzB,OADAG,QAAQC,IAAIS,EAASC,EAAQd,GAEvB,yBAAKlD,UAAU,aACb,yBAAMA,UAAY,OACd,yBAAMA,UAAY,+BAEV+D,EAAU,oCACN,4CAGJ,oCACKb,EAAKe,SACNf,EAAKe,SAAShC,KAAK,SAAAiC,GAAI,OACnB,kBAACC,EAAD,CAAUvE,MAAOsE,EAAKtE,MAAOwE,MAAI,EAACC,OAAQH,EAAKG,OAAO3D,WACtDT,GAAIiE,EAAKI,IAAKC,IAAKL,EAAKI,SAG3B,iEAKjB,yBAAKtE,UAAU,YACX,uBAAGA,UAAU,8BAA8BwE,KAAK,UAAhD,sBC/BDC,MAVf,WACI,OACI,oCACA,kBAAE,EAAF,CAASrD,KAAO,gBAChBC,QAAU,qCACV,kBAAC,EAAD,Q,0CCaOqD,MApBf,YAAsE,IAAtDC,EAAqD,EAArDA,MAAOxE,EAA8C,EAA9CA,KAAMsD,EAAwC,EAAxCA,YAAYmB,EAA4B,EAA5BA,OAAO9C,EAAqB,EAArBA,MAAM+C,EAAe,EAAfA,SAASC,EAAM,EAANA,KAE3D,OACI,yBAAK9E,UAAU,iBACX,yBAAKA,UAAU,2DACb,+BAAQ2E,GACR,2BAAO3E,UAAU,eACjB8E,KAAMA,EACN3E,KAAMA,EACNuD,SAAUkB,EACVnB,YAAaA,EACb3B,MAAOA,EACP+C,SAAUA,IACV,uBAAG7E,UAAU,8B,yjBCgBZ+E,MA7Bf,SAAiBC,GAAuB,IAAbC,EAAY,uDAAH,GAAG,EACPpE,mBAASoE,GADF,mBAC5BC,EAD4B,KACpBC,EADoB,KAsBnC,OAnBAC,qBAAU,WACN/B,QAAQC,IAAI2B,GACRA,EAAQI,uBACDJ,EAAQI,cAAcC,WAC7BH,EAAU,EAAD,GAAKF,EAAQI,mBAE3B,CAACJ,IAaG,CACHC,SACAK,aAbiB,SAACC,GACfA,GAAOA,EAAMC,iBAChBT,EAASE,IAYTQ,kBATsB,SAACF,GACvBA,EAAMG,UAD2B,MAEXH,EAAM3D,OAArBiD,EAF0B,EAE1BA,KAAMhD,EAFoB,EAEpBA,MACbqD,GAAU,SAAAS,GAAM,YAAUA,EAAV,eAAkBd,EAAOhD,U,6xBCdjD,IAAM+D,EAAiBjC,IAAH,KAoELkC,MA1Df,YAA0B,IAAVC,EAAS,EAATA,QAAS,EACDC,YAAYH,GAAzBI,EADc,sBAkBjBlB,EAfW,uCAAG,WAAMG,GAAN,qBAAAgB,EAAA,sEAEeD,EAAU,CAACE,UAAU,KAAIjB,KAFxC,gBAEPhC,EAFO,EAEPA,KAAMc,EAFC,EAEDA,OACTd,IACQkD,EAAUlD,EAAVkD,MACRtH,aAAauH,QAAQ,YAAaD,EAAMvH,OACxCkH,EAAQO,KAAK,MAEdtC,GAAQuC,MAAM,sBAAD,OAAuBvC,IARzB,2CAAH,uDAYXkB,EAfiB,EAejBA,OACAK,EAhBiB,EAgBjBA,aACAG,EAjBiB,EAiBjBA,kBAGJ,OAAO,oCACH,kBAAC,EAAD,CAAQtE,KAAO,oBACfC,QAAU,mCACV,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,8BACX,0BAAMwG,SAAUjB,GACZ,kBAAC,EAAD,CACAT,KAAK,QACLH,MAAM,UACNxE,KAAK,OACLsD,YAAY,mBACZ3B,MAAOoD,EAAOuB,MACd7B,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,WACLH,MAAM,aACNxE,KAAK,WACLsD,YAAY,sBACZ3B,MAAOoD,EAAOwB,SACd9B,OAAQc,EACRb,UAAU,IAEd,yBAAK7E,UAAU,iBACX,4BAAQA,UAAU,8BAA8BG,KAAK,UAArD,kB,syBCxDpB,IAAMwG,EAAkB/C,IAAH,KAkJNgD,MAtIf,YAA4B,IAAXb,EAAU,EAAVA,QAAU,EAEFC,YAAYW,GAA1BE,EAFgB,sBAsBnB9B,EAlBW,uCAAG,WAAOG,GAAP,iBAAAgB,EAAA,yDACThB,EAAOwB,WAAaxB,EAAO4B,iBADlB,+BAEH5B,EAAO4B,iBACdzD,QAAQC,IAAI4B,GAHF,SAIa2B,EAAW,CAACV,UAAU,CAACjD,KAAK,KAAIgC,MAJ7C,iBAIFhC,EAJE,EAIFA,QAEDA,EAAKc,QAAQX,QAAQC,IAAIJ,EAAKc,QACjC+B,EAAQO,KAAK,WAPP,wBAUVC,MAAM,iCAVI,4CAAH,uDAeXrB,EAnBmB,EAmBnBA,OACAK,EApBmB,EAoBnBA,aACAG,EArBmB,EAqBnBA,kBAGJ,OAAO,oCACH,kBAAC,EAAD,CAAQtE,KAAO,kBACfC,QAAU,mEACV,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,8BACX,0BAAMwG,SAAUjB,GACZ,kBAAC,EAAD,CACAT,KAAK,aACLH,MAAM,WACNxE,KAAK,OACLsD,YAAY,oBACZ3B,MAAOoD,EAAOxE,WACdkE,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,YACLH,MAAM,aACNxE,KAAK,OACLsD,YAAY,sBACZ3B,MAAOoD,EAAO6B,UACdnC,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,QACLH,MAAM,UACNxE,KAAK,OACLsD,YAAY,mBACZ3B,MAAOoD,EAAOuB,MACd7B,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,WACLH,MAAM,aACNxE,KAAK,WACLsD,YAAY,sBACZ3B,MAAOoD,EAAOwB,SACd9B,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,mBACLH,MAAM,yBACNxE,KAAK,WACLsD,YAAY,+BACZ3B,MAAOoD,EAAO4B,iBACdlC,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,aACLH,MAAM,uBACNxE,KAAK,OACLsD,YAAY,iCACZ3B,MAAOoD,EAAO8B,WACdpC,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,SACLH,MAAM,SACNxE,KAAK,SACLsD,YAAY,SACZ3B,MAAOoD,EAAO+B,OACdrC,OAAQc,EACRb,UAAU,IAEV,kBAAC,EAAD,CACAC,KAAK,SACLH,MAAM,yBACNxE,KAAK,OACLsD,YAAY,qCACZ3B,MAAOoD,EAAOgC,OACdtC,OAAQc,EACRb,UAAU,IAET,kBAAC,EAAD,CACDC,KAAK,KACLH,MAAM,iBACNxE,KAAK,SACLsD,YAAY,WACZ3B,MAAOoD,EAAO4B,iBACdlC,OAAQc,EACRb,UAAU,IAET,kBAAC,EAAD,CACDC,KAAK,oBACLH,MAAM,gCACNxE,KAAK,SACLsD,YAAY,6CACZ3B,MAAOoD,EAAO4B,iBACdlC,OAAQc,EACRb,UAAU,IAEd,yBAAK7E,UAAU,iBACX,4BAAQA,UAAU,8BAA8BG,KAAK,UAArD,qBCzIL,WAASgH,GAAkB,IAC9BhI,EAAoBY,IAApBZ,gBACR,OAAO,SAASO,GACZ,OAAOP,EACD,kBAACgI,EAAqBzH,GACtB,kBAAC,WAAD,CAAUe,GAAG,a,yvBCD3B,IAAM2G,GAAcxD,IAAH,MAsFDyD,OA9EhB,YAA2B,IAAVtB,EAAS,EAATA,QAAS,EACHC,YAAYoB,IAAxBE,EADe,sBAEGzG,mBAAS,IAFZ,mBAEfE,EAFe,KAETwG,EAFS,OAGkB1G,mBAAS,IAH3B,mBAGf2G,EAHe,KAGDC,EAHC,OA4BlB1C,EAVW,uCAAG,WAAOG,GAAP,mBAAAgB,EAAA,sEACgBoB,EAAS,CAACnB,UAAU,CAACjD,KAAK,MAAIgC,EAAL,CAAYnE,aADrD,gBACNmC,EADM,EACNA,KAAMc,EADA,EACAA,OACXd,GAAM6C,EAAQO,KAAK,KAClBtC,GAAQuC,MAAM,YAAD,OAAavC,IAHhB,2CAAH,uDAOXkB,EAzBkB,EAyBlBA,OACAK,EA1BkB,EA0BlBA,aACAG,EA3BkB,EA2BlBA,kBAGJ,OAAO,oCACF,kBAAC,EAAD,CAAQtE,KAAO,wBAChBC,QAAU,4BACV,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,8BACX,0BAAMwG,SAAUjB,GACZ,kBAAC,EAAD,CACAT,KAAK,QACLH,MAAM,WACNxE,KAAK,OACLsD,YAAY,kBACZ3B,MAAOoD,EAAOtF,MACdgF,OAAQc,EACRb,UAAU,IAEV,yBAAK7E,UAAU,iBACP,yBAAKA,UAAU,iDACX,8CACA,8BAAUA,UAAU,eACpByD,YAAY,sBACZqB,KAAK,UAAUpB,SAAUgC,EAAmB5D,MAAOoD,EAAOwC,QAC1DC,KAAK,KAAKC,KAAK,SAG3B,kBAAC,EAAD,CACA9C,KAAK,QACLH,MAAM,UACNxE,KAAK,OACLsD,YAAY,kCACZmB,OAvDG,SAAAY,GACf,IAAMqC,EAAS,IAAIC,WACbC,EAAOvC,EAAM3D,OAAOmG,MAAM,GAEhCH,EAAOI,UAAY,WACfV,EAASQ,GACTN,EAAgBI,EAAOK,SAG3BL,EAAOM,cAAcJ,IA+CTlD,UAAU,IAEV,yBAAKzC,IAAKoF,EAAcjF,IAAI,GAAGvC,UAAU,iBAE7C,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,8BAA8BG,KAAK,UAArD,yB,iTC7EpB,IAAMiI,GAAWxE,IAAH,MA+CCyE,OAjCf,YAAuB,IACZpI,EADW,EAAPqI,MACQC,OAAZtI,GADW,EAMd6D,YAASsE,GAAU,CACnBjC,UAAW,CACPlG,QALJ8D,EAHc,EAGdA,QACAC,EAJc,EAIdA,OACAd,EALc,EAKdA,KAMJ,OAAGa,EAAgB,yCAChBC,EAAe,4BAAKA,IACvBX,QAAQC,IAAIJ,GAGR,kBAAC,EAAD,CAAQ9B,KAAM8B,EAAKmC,cAAczF,MACjCmB,MACImC,EAAKmC,cAActE,MAEvBM,QAAO,uBAAkB6B,EAAKmC,cAAchB,OAAO3D,WAA5C,YAA0DwC,EAAKmC,cAAchB,OAAO0C,YACvF,yBAAK/G,UAAU,aACvB,yBAAKA,UAAU,OACd,yBAAKA,UAAU,8BACd,2BAAIkD,EAAKmC,cAAcqC,e,2+BCnC7B,IAAMc,GAAc5E,IAAH,MAQX6E,GAAW7E,IAAH,MAoHC8E,UAzGf,YAAkC,IAAjBJ,EAAgB,EAAhBA,MAAOvC,EAAS,EAATA,QAAS,EACVC,YAAYwC,IAAxBlB,EADsB,sBAEHzG,mBAAS,IAFN,mBAEtBE,EAFsB,KAEfwG,EAFe,OAGW1G,mBAAS,IAHpB,mBAGtB2G,EAHsB,KAGRC,EAHQ,KAKvBkB,EAAQ7E,YAAS2E,GAAU,CAC7BtC,UAAW,CACPlG,GAAIqI,EAAMC,OAAOtI,MAPI,EA4CzB8E,EApBW,uCAAG,WAAOG,GAAP,qBAAAgB,EAAA,oEACPhB,EAAOnE,MACR6H,EAAU7H,EAAK,MAAQmE,EAAR,CAAgBnE,UAAhB,MAA4BmE,GAFnC,SAMJoC,EAAS,CACPnB,UAAW,CACPlG,GAAIqI,EAAMC,OAAOtI,GACjBiD,KAAM0F,KATR,gBAIV1F,EAJU,EAIVA,KACAc,EALU,EAKVA,OAODd,GAAM6C,EAAQO,KAAK,KAClBtC,GAAQuC,MAAM,YAAD,OAAavC,IAbhB,2CAAH,sDAoBQ2E,EAAMzF,MAHzBgC,EAzCyB,EAyCzBA,OACAK,EA1CyB,EA0CzBA,aACAG,EA3CyB,EA2CzBA,kBAGJ,OAAGiD,EAAM5E,QAAgB,4CAEd,oCACN,kBAAC,EAAD,CAAQ3C,KAAO,gCAChBC,QAAU,oCACV,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,8BACX,0BAAMwG,SAAUjB,GACZ,kBAAC,EAAD,CACAT,KAAK,QACLH,MAAM,WACNxE,KAAK,OACLsD,YAAY,kBACZ3B,MAAOoD,EAAOtF,MACdgF,OAAQc,IAER,yBAAK1F,UAAU,iBACP,yBAAKA,UAAU,iDACX,8CACA,8BAAUA,UAAU,eACpByD,YAAY,sBACZqB,KAAK,UAAUpB,SAAUgC,EAAmB5D,MAAOoD,EAAOwC,QAC1DC,KAAK,KAAKC,KAAK,SAG3B,kBAAC,EAAD,CACA9C,KAAK,QACLH,MAAM,UACNxE,KAAK,OACLsD,YAAY,kCACZmB,OAlEG,SAAAY,GACnB,IAAMqC,EAAS,IAAIC,WACbC,EAAOvC,EAAM3D,OAAOmG,MAAM,GAEhCH,EAAOI,UAAY,WACfV,EAASQ,GACTN,EAAgBI,EAAOK,SAG3BL,EAAOM,cAAcJ,MA8DDY,EAAMzF,KAAKmC,cAActE,MACrB,oCACA,6CACA,yBAAKqB,IAAKuG,EAAMzF,KAAKmC,cAActE,MAAOwB,IAAI,GAAGvC,UAAU,kBAE3D,qCAGR,yBAAKoC,IAAKoF,EAAcjF,IAAI,GAAGvC,UAAU,iBAE7C,yBAAKA,UAAU,iBACX,4BAAQA,UAAU,8BAA8BG,KAAK,UAArD,8B,8QCjHpB,IAAM0I,GAAUjF,IAAH,MAiDEkF,OAjCf,WAAc,IAAD,EACuBhF,YAAS+E,IAAlC3F,EADE,EACFA,KAAMa,EADJ,EACIA,QAASC,EADb,EACaA,OAEtB,OADAX,QAAQC,IAAIJ,GACRa,EAAgB,4CAChBC,EAAe,kDAGf,kBAAC,EAAD,CACI5C,KAAI,UAAK8B,EAAK6F,GAAGrI,WAAb,YAA2BwC,EAAK6F,GAAGhC,WACvC1F,QAAQ,aAER,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,8BAEPkD,EAAK6F,GAAGC,MAAMC,QAAO,SAAA/E,GAAI,OAAIA,EAAKgF,aAAWjH,KAAK,SAAAiC,GAAI,OAClD,kBAACC,EAAD,CACAvE,MAAOsE,EAAKtE,MACZyE,OAAQnB,EAAK6F,GAAGrI,WAChBT,GAAIiE,EAAKI,IACTC,IAAKL,EAAKI,IACVF,MAAI,EACJ+E,QAAM,YClClC,SAASC,KAGL,OAFAtK,aAAauK,WAAW,aACxBhG,QAAQC,IAAI,mBACL,kBAAC,WAAD,CAAU7C,GAAG,WAqBT6I,OAlBf,WAEI,OACI,oCACI,kBAAC,QAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhF,IACjC,kBAAC,QAAD,CAAO8E,OAAK,EAACC,KAAK,SAASC,UAAW3D,IACtC,kBAAC,QAAD,CAAOyD,OAAK,EAACC,KAAK,UAAUC,UAAW7C,IACvC,kBAAC,QAAD,CAAO2C,OAAK,EAACC,KAAK,UAAUC,UAAWpC,KACvC,kBAAC,QAAD,CAAOkC,OAAK,EAACC,KAAK,YAAYC,UAAWpB,KACzC,kBAAC,QAAD,CAAOkB,OAAK,EAACC,KAAK,UAAUC,UAAWf,EAAQU,MAC/C,kBAAC,QAAD,CAAOG,OAAK,EAACC,KAAK,cAAcC,UAAWC,KAC1C,kBAAC,QAAD,CAAOH,OAAK,EAACC,KAAK,MAAMC,UAAWX,O,imBCtBhD,IAAMa,GAAUC,8CAAYC,eAAiB,iCAEvCC,GAAWC,4BAAiB,CAC9BC,IAAKL,KAGHM,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QACxBvL,EAAQC,aAAaC,QAAQ,aAC7BsL,EAAU,CACZD,QAAQ,MACDA,IAIX,OADIvL,IAAOwL,EAAQD,QAAR,4BAA0CvL,IAC9CwL,KAGI,OAAIC,KAAa,CAC5BC,KAAMN,GAASO,OAAOV,IACtBW,MAAO,IAAIC,OCbKC,QACW,cAA7BpL,OAAOqL,SAASC,UAEe,UAA7BtL,OAAOqL,SAASC,UAEhBtL,OAAOqL,SAASC,SAASvC,MACvB,2DCTNwC,IAASC,OACL,kBAAC,IAAD,CAAgBC,OAAQA,IACpB,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGNC,SAASC,eAAe,SDkHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrI,MAAK,SAAAsI,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.606b92dc.chunk.js","sourcesContent":["export default function(){\n    const token = localStorage.getItem('blogToken');\n\n    if(token){\n        const baseUri = token.split('.')[1];\n        const base64 = baseUri.replace('-','+').replace('_','/');\n        const payload = JSON.parse(window.atob(base64));\n\n        return {\n            isAuthenticated: true,\n            payload\n        }\n    } else {\n        return {\n            isAuthenticated: false,\n            payload:null,\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport authenticate from '../utils/authenticate';\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            title: props.title, //<Navbar title=\"Lo que sea\">\n        }\n    }\n\n    componentDidMount(){\n        /**\n         * Se ejecuta despues de pintarse.\n         * \n         * llamadas a las API\n         * Cualquier acción side effect.\n         */\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        //Se ejecuta cada vez que recibe nuevos props o se actualiza el estado\n        //Actualizar el estado según un cambio en el componente.\n    }\n\n    render() {\n        const { isAuthenticated, payload } = authenticate();\n        return(\n            <>\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n                <div className=\"container\">\n                {this.state.title}\n                <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    Menu\n                    <i className=\"fas fa-bars\"></i>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                    <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\">Menú</Link>\n                    </li>\n                { isAuthenticated ? (\n                    <>\n                        <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/me\">Hola {payload.first_name}!</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/create\">Arma tu pedido</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/logout\">Cerrar sesión</Link>\n                        </li>\n                    </>\n                ) : (\n                    <>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">Inica Sesión</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/signup\">Regístrate</Link>\n                        </li>\n                </>\n                )\n                \n                }\n                    </ul>\n                </div>\n                </div>\n            </nav>\n            </>\n        );\n    };\n}\n\nexport default Navbar; //ES6 Babel\n//module.exports = Navbar; ES5 Common Js","import React, { useState, useEffect } from \"react\";\nimport image from '../img/comida-mexicana.png';\n\nfunction Head(props) {\n    const [title, setTitle] = useState(props.title);//parametro por default\n    const [subheading, setSubheading] = useState(props.subheading);\n    const cover = props.cover ? props.cover : image;\n    return (\n        <>\n            <header className=\"masthead\" style={{backgroundImage: `url('${cover}')`}}>\n                <div className=\"overlay\"></div>\n                <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-8 col-md-10 mx-auto\">\n                    <div className=\"site-heading\">\n                        <h1>{title}</h1>\n                        <span className=\"subheading\">{subheading}</span>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </header> \n        </>\n    );\n}\nexport default Head;","import React from 'react';\nimport Navbar from './Navbar';\nimport Head from './Head';\n\nfunction Layout({ head, subhead, children, cover }){\n    return (\n    <>\n      <Navbar title=\"We Love Food\"/>\n      <Head title={head} subheading={subhead} cover={cover} />\n        {children}\n      {}\n    </>\n  );\n}\n\nexport default Layout;","/* import React from \"react\"; */\n/* import { Link } from 'react-router-dom'; */\nimport {useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './carta.css';\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\n\n/* const DELETE_POST = gql`\n\n  mutation deletePost($id:ID!){\n    deleteOnePost(id:$id)\n  }\n\n`;\n\nfunction PostCard({title, author, id, edit, remove}) {\n  const [deletePost] = useMutation(DELETE_POST);\n\n\n    return (\n        <>\n        <div className=\"post-preview\">\n          <Link to={`/post/${id}`}>\n            < h2 className= \"post-title\" >\n              {title}\n            </h2>\n          </Link>\n          < p className= \"post-meta\" > Picante\n            <Link to=\"#\">{author}</Link> \n          </p>\n          <p>\n            {\n              edit ? <Link to={`/update/${id}`}>Agregar</Link>: <></>\n            } \n            {\n              remove ? <button onClick={\n                () => {\n\n                    deletePost({variables:{id}}).then(()=>{\n                      window.location.reload();\n                    })\n                  \n                }\n              }>Borrar post </button>\n              : <></>\n            }           \n          </p>\n        </div>\n        </>\n    );\n}\n\nexport default PostCard; */\n\n\n\nexport class FoodCardOrder extends Component {\n\n    state = {\n        platillos: [],\n        searchValue: \"\"\n    }\n\n    componentDidMount() {\n        this.getPlatillos()\n\n    }\n\n    getPlatillos() {\n        axios.get(`https://tamales-server.herokuapp.com/all/food`)\n            .then(response => {\n                this.setState({\n                    platillos: response.data,\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    borrarPlatillo(id) {\n        axios.put(`https://tamales-server.herokuapp.com/update/food${id}`)\n            .then(res => {\n                this.getPlatillos()\n            })\n            .catch(err => console.log(err))\n    }\n\n    buscaPlatilos = (e) => {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        })\n    }\n\n                        \n   /*  function myFunction() {\n        <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n        <strong>Tu platillo se ah Añadido a tu Carrito de Compra</strong> Si deseas Ordenar solo eso dirigete a tu Carrito \n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    } */\n\n    renderPlatillos = () => {\n        return this.state.platillos.map(platillo => {\n            if (platillo.platillo.toLowerCase().startsWith(this.state.searchValue)) {\n                return (\n                    <div className=\"card\" >\n                        <img src={platillo.img_platillo} style={{ width: '15rem' }} className=\"imgprro card-img-top\" alt=\"Platillo Recomendado\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{platillo.platillo}</h5>\n                            <p className=\"card-text\">{platillo.picante}</p>\n                            <img className=\"logoRest\" src={platillo.restaurante} alt=\"restaurante\" />\n                            <p className=\"card-text\">{platillo.ingredientes}</p>\n                            <p className=\"card-text\">{platillo.descripcion}</p>\n                            <div>\n                            <button type=\"button\" class=\"btn btn-outline-success\"><Link className=\"nav-link\" to=\"/carrito\">Carrito</Link></button>\n                            \n                        \n                              \n\n                            </div>\n                            \n                            {/*  <button type=\"button\" className=\"btn btn-success\" onClick={()=> \n                               \n                                /* this.mandarCarrito(platillo._id) */}{/* >Ordenar</button>  */}\n                        </div>\n                    </div>\n                )\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <div className='card-container'>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"¿De que tienes antojo?\" onChange={this.buscaPlatilos} />\n                </div>\n                {\n                    this.renderPlatillos()\n                }\n            </div>\n        )\n\n    }\n}\n\nexport default FoodCardOrder","import React from 'react';\nimport PostCard from '../components/PostCard';\nimport { useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\n\nconst QUERY_POSTS = gql `\n\n    query GETPOST{\n        getPosts {\n            _id,\n            title,\n            author{\n                first_name\n            }\n        }\n    }\n\n`;\n\nfunction Feed() {\n\n    const { loading, errors, data } = useQuery(QUERY_POSTS);\n    console.log(loading, errors, data);\n    return (\n          <div className=\"container\">\n            < div className = \"row\" >\n                < div className = \"col-lg-12 col-md-10 mx-auto\" >\n                    {\n                        loading ? <>\n                            <h3>Cargando...</h3>\n                        </>  \n                        :\n                        <>\n                            {data.getPosts ? \n                            data.getPosts.map( post => (\n                                <PostCard title={post.title} edit author={post.author.first_name}\n                                id={post._id} key={post._id}/>\n                            ))\n                            :\n                            (<h2>No hay alimentos en tu carrito.</h2>)\n                            }\n                        </> \n                    }\n            </div>\n            <div className=\"clearfix\">\n                <a className=\"btn btn-primary float-right\" href=\"create\">\n                    Carrito &rarr;</a>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Feed;","import React from 'react';\nimport Layout from '../common/Layout';\nimport Feed from '../common/Feed';\n\nfunction Home() {\n    return(\n        <>\n        < Layout head = \"We Love Food!\"\n        subhead = \"Cumpliendo antojos desde el 2019\" />\n        <Feed/>\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nfunction Input({label, type, placeholder,change,value,required,name}){\n\n    return(\n        <div className=\"control-group\">\n            <div className=\"form-group col-xs-12 floating-label-form-group controls\">\n              <label>{label}</label>\n              <input className=\"form-control\" \n              name={name}\n              type={type} \n              onChange={change}\n              placeholder={placeholder}\n              value={value}\n              required={required}/>\n              <p className=\"help-block text-danger\"></p>\n          </div>\n        </div>\n    );\n\n}\n\nexport default Input;","import { useState, useEffect} from 'react';\n\nfunction useForm(callback, current= {}){\n    const [inputs, setInputs] = useState(current);\n\n    useEffect(()=>{\n        console.log(current)\n        if (current.getSinglePost){\n            delete current.getSinglePost.__typename\n            setInputs({...current.getSinglePost})\n        }\n    }, [current])\n\n    const handleSubmit = (event) => {\n        if(event) event.preventDefault();\n        callback(inputs);\n    }; // cachar el submit de mi formulario\n\n    const handleInputChange = (event) => {\n        event.persist();\n        const {name, value} = event.target\n        setInputs(fields => ({ ...fields,[name]: value })); // se va ejecutar cuando el onchange se ejecute en los inputs y se modifique el valor\n    }\n\n    return {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    }\n}\n\nexport default useForm;","import React from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input'\nimport useForm from '../hooks/useForm';\n\nconst LOGIN_MUTATION = gql`\n\n    mutation LOGIN($email: EmailAddress!,$password: String!) {\n        login(email: $email, password: $password){\n            token\n        }\n    }\n\n`;\n\nfunction Login({history}){\n    const [sendLogin] = useMutation(LOGIN_MUTATION);\n\n    const catchData = async(inputs) =>{\n        // {variables: { email: \"\", password:\"\"}}\n        const {data, errors} = await sendLogin({variables:{...inputs}});\n        if (data) {\n            const { login } = data;\n            localStorage.setItem('blogToken', login.token);\n            history.push('/');\n        }\n        if(errors) alert(`Error con tu login ${errors}`);\n    }\n\n     const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData);\n\n    return(<>\n        <Layout head = \"Inicia sesión.\"\n        subhead = \"Es hora de cumplir tus antojos.\" >\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <form onSubmit={handleSubmit}>\n                    <Input\n                    name=\"email\"\n                    label=\"Email: \"\n                    type=\"text\"\n                    placeholder=\"Escribe tu email\"\n                    value={inputs.email}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"password\"\n                    label=\"Password: \"\n                    type=\"password\"\n                    placeholder=\"Escribe tu password\"\n                    value={inputs.password}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                <div className=\"clearfix mt-4\">\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">\n                        Entrar \n                        </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        </Layout>\n    </>);\n}\n\nexport default Login;","import React from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input'\nimport useForm from '../hooks/useForm';\n\nconst CREATE_MUTATION = gql`\n\n    mutation AddAuthor($data:AuthorInput!){\n        createNewAuthor(data:$data){\n            _id,\n            email\n            first_name\n        }\n    }\n\n`;\n\nfunction Signup({history}) {\n\n    const [sendSignup] = useMutation(CREATE_MUTATION);\n\n    const catchData = async (inputs) => {\n        if ( inputs.password === inputs.confirm_password){\n            delete inputs.confirm_password;\n            console.log(inputs);\n            const { data } = await sendSignup({variables:{data:{...inputs}}});\n            if(data){\n                if(data.errors) console.log(data.errors);\n                history.push('/login');\n            }\n        } else {\n            alert('Tu contraseña no coincide.');\n        }\n    }\n\n    const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData);\n\n    return(<>\n        <Layout head = \"Crea tu cuenta.\"\n        subhead = \"Comencemos a cumplir tus antojos, crea una cuenta con nosotros.\" >\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <form onSubmit={handleSubmit}>\n                    <Input\n                    name=\"first_name\"\n                    label=\"Nombre: \"\n                    type=\"text\"\n                    placeholder=\"Escribe tu nombre\"\n                    value={inputs.first_name}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"last_name\"\n                    label=\"Apellido: \"\n                    type=\"text\"\n                    placeholder=\"Escribe tu apellido\"\n                    value={inputs.last_name}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"email\"\n                    label=\"Email: \"\n                    type=\"text\"\n                    placeholder=\"Escribe tu email\"\n                    value={inputs.email}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"password\"\n                    label=\"Password: \"\n                    type=\"password\"\n                    placeholder=\"Escribe tu password\"\n                    value={inputs.password}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"confirm_password\"\n                    label=\"Confirma tu Password: \"\n                    type=\"password\"\n                    placeholder=\"Escribe de nuevo tu password\"\n                    value={inputs.confirm_password}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"birth_date\"\n                    label=\"Fecha de nacimiento \"\n                    type=\"Date\"\n                    placeholder=\"Ingresa tu fecha de nacimiento\"\n                    value={inputs.birth_date}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"gender\"\n                    label=\"Genero\"\n                    type=\"String\"\n                    placeholder=\"Genero\"\n                    value={inputs.gender}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <Input\n                    name=\"addres\"\n                    label=\"Ingresa tu direccion: \"\n                    type=\"text\"\n                    placeholder=\"Ingresa tu calle y numero exterior\"\n                    value={inputs.addres}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                     <Input\n                    name=\"cp\"\n                    label=\"Codigo Postal \"\n                    type=\"Number\"\n                    placeholder=\"CP:00000\"\n                    value={inputs.confirm_password}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                     <Input\n                    name=\"Numero de celular\"\n                    label=\"Ingresa tu numero de celular \"\n                    type=\"Number\"\n                    placeholder=\"Ingrea un numero donde podamos contactarte\"\n                    value={inputs.confirm_password}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                <div className=\"clearfix mt-4\">\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">\n                        Registrar \n                        </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        </Layout>\n    </>);\n}\n\nexport default Signup;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authenticate from './authenticate';\n\nexport default function(WrappedComponent){\n    const { isAuthenticated } = authenticate();\n    return function(props){\n        return isAuthenticated \n            ? <WrappedComponent {...props}/>\n            : <Redirect to=\"/login\"/>\n    }\n}\n","import React, {useState} from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input' \nimport useForm from '../hooks/useForm';\nimport authHOC from '../utils/authHOC';\n\nconst CREATE_POST = gql`\n    mutation createPost($data:PostInput!){\n        createNewPost(data:$data){\n            _id\n        }\n    }\n`;\n\nfunction Create({history}){\n    const [sendPost] = useMutation(CREATE_POST);\n    const [cover,setCover] = useState('');\n    const [coverPreview, setCoverPreview] = useState('');\n\n    const catchCover = event => {\n        const reader = new FileReader();\n        const file = event.target.files[0];\n\n        reader.onloadend = () =>{\n            setCover(file);\n            setCoverPreview(reader.result);\n        } \n\n        reader.readAsDataURL(file);\n\n    }\n\n    const catchData = async (inputs) => {\n        const { data, errors} = await sendPost({variables:{data:{...inputs,cover}}});\n        if(data) history.push('/');\n        if (errors) alert(`Errores: ${errors}`);\n    }\n\n    const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData);\n    \n    return(<>\n         <Layout head = \"Tu carrito de compras\"\n        subhead = \"Aqui estan tus antojitos\" >\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <form onSubmit={handleSubmit}>\n                    <Input\n                    name=\"title\"\n                    label=\"Titulo: \"\n                    type=\"text\"\n                    placeholder=\"Titulo del post\"\n                    value={inputs.title}\n                    change={handleInputChange}\n                    required={true}\n                    ></Input>\n                    <div className=\"control-group\">\n                            <div className=\"form-group floating-label-form-group controls\">\n                                <label>Contenido: </label>\n                                <textarea className=\"form-control\" \n                                placeholder=\"Contenido del post \"\n                                name=\"content\" onChange={handleInputChange} value={inputs.content} \n                                cols=\"30\" rows=\"10\"></textarea>\n                            </div>\n                        </div>\n                    <Input\n                    name=\"cover\"\n                    label=\"Cover: \"\n                    type=\"file\"\n                    placeholder=\"Selecciona el cover de tu post.\"\n                    change={catchCover}\n                    required={true}\n                    ></Input>\n                    <img src={coverPreview} alt=\"\" className=\"d-block w-50\"></img>\n        \n                <div className=\"clearfix mt-4\">\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">\n                        Guardar post. \n                        </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        </Layout>\n    </>);\n}\n\nexport default (Create);","import React from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\n\nconst ONE_POST = gql`\n    query getOnePost($id:ID!){\n        getSinglePost(id:$id){\n            title\n            content\n            cover\n            author{\n                first_name\n                last_name\n            }\n        }\n    }\n`;\n\nfunction Post({match}){\n    const {id} = match.params;\n    const {\n        loading,\n        errors,\n        data\n    } = useQuery(ONE_POST, {\n        variables: {\n            id\n        }\n    });\n    if(loading) return <h2>Carrgando</h2>\n    if(errors) return <h2>{errors}</h2>\n    console.log(data);\n\n    return(\n        <Layout head={data.getSinglePost.title}\n        cover = {\n            data.getSinglePost.cover\n        }\n        subhead={`Escrito por: ${data.getSinglePost.author.first_name} ${data.getSinglePost.author.last_name}`}>\n            <div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-8 col-lg-10 mx-auto\">\n\t\t\t\t\t\t<p>{data.getSinglePost.content}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n        </Layout>\n    );\n}\n\nexport default Post;","import React, {useState} from 'react';\nimport { useMutation, useQuery } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport Input from '../common/Input' \nimport useForm from '../hooks/useForm';\nimport authHOC from '../utils/authHOC';\n\nconst UPDATE_POST = gql `\n    mutation updatePost($id: ID!, $data: PostUpdateInput!) {\n        updateOnePost(id:$id ,data: $data) {\n            _id\n        }\n    }\n`;\n\nconst GET_POST = gql `\n    query getOnePost($id:ID!){\n        getSinglePost(id:$id){\n            title\n            content\n            cover\n        }\n    }\n`;\n\n\nfunction Update({match, history}){\n    const [sendPost] = useMutation(UPDATE_POST);\n    const [cover, setCover] = useState('');\n    const [coverPreview, setCoverPreview] = useState('');\n    \n    const query = useQuery(GET_POST, {\n        variables: {\n            id: match.params.id\n        }\n    });\n\n    const catchCover = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    reader.onloadend = () =>{\n        setCover(file);\n        setCoverPreview(reader.result);\n    } \n\n    reader.readAsDataURL(file);\n\n    }\n\n    const catchData = async (inputs) => {\n        delete inputs.cover;\n        const newData = cover ? { ...inputs, cover}: {...inputs}\n        const {\n            data,\n            errors\n        } = await sendPost({\n                    variables: {\n                        id: match.params.id,\n                        data: newData,\n                    }\n                });\n        if(data) history.push('/');\n        if (errors) alert(`Errores: ${errors}`);\n    }\n\n    const {\n        inputs,\n        handleSubmit,\n        handleInputChange,\n    } = useForm(catchData, query.data);\n\n    if(query.loading) return <h2>Carrgando...</h2>\n\n        return(<>\n         <Layout head = \"Modifica tu post de postealo!\"\n        subhead = \"Comparte todo lo que gustes aqui\" >\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <form onSubmit={handleSubmit}>\n                    <Input\n                    name=\"title\"\n                    label=\"Titulo: \"\n                    type=\"text\"\n                    placeholder=\"Titulo del post\"\n                    value={inputs.title}\n                    change={handleInputChange}\n                    ></Input>\n                    <div className=\"control-group\">\n                            <div className=\"form-group floating-label-form-group controls\">\n                                <label>Contenido: </label>\n                                <textarea className=\"form-control\" \n                                placeholder=\"Contenido del post \"\n                                name=\"content\" onChange={handleInputChange} value={inputs.content} \n                                cols=\"30\" rows=\"10\"></textarea>\n                            </div>\n                        </div>\n                    <Input\n                    name=\"cover\"\n                    label=\"Cover: \"\n                    type=\"file\"\n                    placeholder=\"Selecciona el cover de tu post.\"\n                    change={catchCover}\n\n                    ></Input>\n\n                    {\n                        query.data.getSinglePost.cover ? (\n                            <>\n                            <h4>Imagen previa</h4>\n                            <img src={query.data.getSinglePost.cover} alt=\"\" className=\"d-block w-50\"></img>\n                            </>\n                        ): (<></>)\n                    }\n\n                    <img src={coverPreview} alt=\"\" className=\"d-block w-50\"></img>\n        \n                <div className=\"clearfix mt-4\">\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">\n                        Actualizar post. \n                        </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        </Layout>\n    </>);\n}\n\nexport default authHOC(Update);","import React from 'react';\nimport {useQuery} from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\nimport Layout from '../common/Layout';\nimport PostCard from '../components/PostCard';\nimport authHOC from '../utils/authHOC';\n\nconst PROFILE = gql`\n\n    {\n        me{\n            first_name\n            last_name\n            posts{\n                _id\n                title,\n                is_active\n            }\n        }\n    } \n\n`;\n\nfunction Me(){\n    const {data, loading, errors} = useQuery(PROFILE);\n    console.log(data);\n    if (loading) return <h2>Carrgando...</h2>;\n    if (errors) return <h3>Errores al cargar.</h3>;\n\n    return(\n        <Layout\n            head={`${data.me.first_name} ${data.me.last_name}`}\n            subhead=\"Mi perfil\"\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col-lg-8 col-md-10 mx-auto\">\n                    {\n                        data.me.posts.filter(post => post.is_active).map( post =>\n                            <PostCard\n                            title={post.title}\n                            author={data.me.first_name}\n                            id={post._id}\n                            key={post._id}\n                            edit\n                            remove\n                            />\n                        )\n                    }\n                </div>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Me;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Home from './views/Home'\nimport Login from './views/Login'\nimport Signup from './views/Signup'\nimport authHOC from './utils/authHOC';\nimport Create from './views/Create';\nimport Post from './views/Post';\nimport Update from './views/Update';\nimport Me from './views/Me';\n\nfunction Logout (){\n    localStorage.removeItem('blogToken');\n    console.log('Entre al logout');\n    return <Redirect to=\"/login\"/>\n}\n\nfunction Routes() {\n\n    return(\n        <>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/signup\" component={Signup}/>\n            <Route exact path=\"/create\" component={Create}/>\n            <Route exact path=\"/post/:id\" component={Post} />\n            <Route exact path=\"/logout\" component={authHOC(Logout)}/>\n            <Route exact path=\"/update/:id\" component={Update} />\n             <Route exact path=\"/me\" component={Me} />\n            \n        </>\n    );\n\n} \n\nexport default Routes;","import { ApolloClient } from 'apollo-client';\n// import { createHttpLink } from 'apollo-link-http';\nimport { createUploadLink } from 'apollo-upload-client'\nimport { setContext} from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst API_URL = process.env.REACT_API_URL || 'https://back-35.herokuapp.com/'  /* 'https://afternoon-scrubland-50224.herokuapp.com/' */;\n\nconst httpLink = createUploadLink({\n    uri: API_URL,\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('blogToken');\n    const context = {\n        headers: {\n            ...headers,\n        },\n    }\n    if (token) context.headers['authorization'] = `JWT ${token}`;\n    return context;\n});\n\nexport default new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { ApolloProvider } from 'react-apollo-hooks';\nimport './index.scss';\nimport Routes from './Routes';\nimport client from './graphql';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Router>\n            <Routes />\n        </Router>\n    </ApolloProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/comida-mexicana.4df31da0.png\";"],"sourceRoot":""}